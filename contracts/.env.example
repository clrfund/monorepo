# Recipient registry type for local deployment: simple, optimistic
RECIPIENT_REGISTRY_TYPE=optimistic

# Supported values: simple, brightid, snapshot, merkle
USER_REGISTRY_TYPE=simple
# clr.fund (prod) or CLRFundTest (testing)
BRIGHTID_CONTEXT=clr.fund
# BrightId node addr that signs verifications. Node One uses this one
#BRIGHTID_VERIFIER_ADDR=0xb1d71F62bEe34E9Fc349234C201090c33BCdF6DB
# brightid.clr.fund node uses this one, see the ethSigningAddress from https://brightid.clr.fund
BRIGHTID_VERIFIER_ADDR=0xdbf0b2ee9887fe11934789644096028ed3febe9c
# The contract that emits the sponsor events that the BrightId node is listening for
BRIGHTID_SPONSOR=

# JSON-RPC endpoint to the selected network
JSONRPC_HTTP_URL=https://eth-goerli.alchemyapi.io/v2/ADD_API_KEY

# One of the two options
WALLET_MNEMONIC=
WALLET_PRIVATE_KEY=

# Token address for funding round .setToken
NATIVE_TOKEN_ADDRESS=

# Required to use in the tally and finalize scripts
CLRFUND=
ROUND_ADDRESS=
COORDINATOR_PK=
COORDINATOR_ETH_PK=

# Used in the tally script to add tally results to funding round by batch, default is 20
TALLY_BATCH_SIZE=
# The block that the MACI contract was created in. Used in fetchLogs
MACI_START_BLOCK=
# Number of blocks of the MACI event logs to fetch, default is 20,000
NUM_BLOCKS_PER_REQUEST=


# Used to verify contracts
# Get the etherscan api keys for goerli, mainnet from https://etherscan.io
# Get the etherscan api keys for arbitrum and testnets from https://arbiscan.io/
ETHERSCAN_API_KEY=


# ZK proof circuit type, based on MACI v0.10.1 circuit type as defined in utils/deployment.ts
# e.g. test, small, medium, x32, prod
CIRCUIT_TYPE=prod


# The IPFS gateway url used by the prepare-results.ts script
IPFS_GATEWAY_URL=

# Parameters used in the tally script
CIRCUIT_TYPE=
CIRCUIT_DIRECTORY=
RAPIDSNARK_DIRECTORY=
# Used in MACI queue merging operation before genProofs, default is 4
NUM_QUEUE_OPS=
# Used in e2e testing to store intermediate states
STATE_FILE=
# MACI creation transaction hash, used to find the start block of MACI logs
MACI_TRANSACTION_HASH=
# genProofs output directory
PROOF_OUTPUT_DIR=
