// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class DeployPoll extends ethereum.Event {
  get params(): DeployPoll__Params {
    return new DeployPoll__Params(this);
  }
}

export class DeployPoll__Params {
  _event: DeployPoll;

  constructor(event: DeployPoll) {
    this._event = event;
  }

  get _pollId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _pubKey(): DeployPoll_pubKeyStruct {
    return changetype<DeployPoll_pubKeyStruct>(
      this._event.parameters[1].value.toTuple(),
    );
  }

  get pollAddr(): DeployPollPollAddrStruct {
    return changetype<DeployPollPollAddrStruct>(
      this._event.parameters[2].value.toTuple(),
    );
  }
}

export class DeployPoll_pubKeyStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class DeployPollPollAddrStruct extends ethereum.Tuple {
  get poll(): Address {
    return this[0].toAddress();
  }

  get messageProcessor(): Address {
    return this[1].toAddress();
  }

  get tally(): Address {
    return this[2].toAddress();
  }

  get subsidy(): Address {
    return this[3].toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SignUp extends ethereum.Event {
  get params(): SignUp__Params {
    return new SignUp__Params(this);
  }
}

export class SignUp__Params {
  _event: SignUp;

  constructor(event: SignUp) {
    this._event = event;
  }

  get _stateIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _userPubKey(): SignUp_userPubKeyStruct {
    return changetype<SignUp_userPubKeyStruct>(
      this._event.parameters[1].value.toTuple(),
    );
  }

  get _voiceCreditBalance(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class SignUp_userPubKeyStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class MACI__deployPollResultPollAddrStruct extends ethereum.Tuple {
  get poll(): Address {
    return this[0].toAddress();
  }

  get messageProcessor(): Address {
    return this[1].toAddress();
  }

  get tally(): Address {
    return this[2].toAddress();
  }

  get subsidy(): Address {
    return this[3].toAddress();
  }
}

export class MACI__deployPollInput_treeDepthsStruct extends ethereum.Tuple {
  get intStateTreeDepth(): i32 {
    return this[0].toI32();
  }

  get messageTreeSubDepth(): i32 {
    return this[1].toI32();
  }

  get messageTreeDepth(): i32 {
    return this[2].toI32();
  }

  get voteOptionTreeDepth(): i32 {
    return this[3].toI32();
  }
}

export class MACI__deployPollInput_coordinatorPubKeyStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class MACI__hashMessageAndEncPubKeyInput_messageStruct extends ethereum.Tuple {
  get msgType(): BigInt {
    return this[0].toBigInt();
  }

  get data(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class MACI__hashMessageAndEncPubKeyInput_encPubKeyStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class MACI__hashStateLeafInput_stateLeafStruct extends ethereum.Tuple {
  get pubKey(): MACI__hashStateLeafInput_stateLeafPubKeyStruct {
    return changetype<MACI__hashStateLeafInput_stateLeafPubKeyStruct>(
      this[0].toTuple(),
    );
  }

  get voiceCreditBalance(): BigInt {
    return this[1].toBigInt();
  }

  get timestamp(): BigInt {
    return this[2].toBigInt();
  }
}

export class MACI__hashStateLeafInput_stateLeafPubKeyStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class MACI__padAndHashMessageResultMessageStruct extends ethereum.Tuple {
  get msgType(): BigInt {
    return this[0].toBigInt();
  }

  get data(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class MACI__padAndHashMessageResultPadKeyStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class MACI__padAndHashMessageResult {
  value0: MACI__padAndHashMessageResultMessageStruct;
  value1: MACI__padAndHashMessageResultPadKeyStruct;
  value2: BigInt;

  constructor(
    value0: MACI__padAndHashMessageResultMessageStruct,
    value1: MACI__padAndHashMessageResultPadKeyStruct,
    value2: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTuple(this.value0));
    map.set("value1", ethereum.Value.fromTuple(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getMessage(): MACI__padAndHashMessageResultMessageStruct {
    return this.value0;
  }

  getPadKey(): MACI__padAndHashMessageResultPadKeyStruct {
    return this.value1;
  }

  getMsgHash(): BigInt {
    return this.value2;
  }
}

export class MACI extends ethereum.SmartContract {
  static bind(address: Address): MACI {
    return new MACI("MACI", address);
  }

  MESSAGE_DATA_LENGTH(): i32 {
    let result = super.call(
      "MESSAGE_DATA_LENGTH",
      "MESSAGE_DATA_LENGTH():(uint8)",
      [],
    );

    return result[0].toI32();
  }

  try_MESSAGE_DATA_LENGTH(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "MESSAGE_DATA_LENGTH",
      "MESSAGE_DATA_LENGTH():(uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  deployPoll(
    _duration: BigInt,
    _treeDepths: MACI__deployPollInput_treeDepthsStruct,
    _coordinatorPubKey: MACI__deployPollInput_coordinatorPubKeyStruct,
    _verifier: Address,
    _vkRegistry: Address,
    useSubsidy: boolean,
  ): MACI__deployPollResultPollAddrStruct {
    let result = super.call(
      "deployPoll",
      "deployPoll(uint256,(uint8,uint8,uint8,uint8),(uint256,uint256),address,address,bool):((address,address,address,address))",
      [
        ethereum.Value.fromUnsignedBigInt(_duration),
        ethereum.Value.fromTuple(_treeDepths),
        ethereum.Value.fromTuple(_coordinatorPubKey),
        ethereum.Value.fromAddress(_verifier),
        ethereum.Value.fromAddress(_vkRegistry),
        ethereum.Value.fromBoolean(useSubsidy),
      ],
    );

    return changetype<MACI__deployPollResultPollAddrStruct>(
      result[0].toTuple(),
    );
  }

  try_deployPoll(
    _duration: BigInt,
    _treeDepths: MACI__deployPollInput_treeDepthsStruct,
    _coordinatorPubKey: MACI__deployPollInput_coordinatorPubKeyStruct,
    _verifier: Address,
    _vkRegistry: Address,
    useSubsidy: boolean,
  ): ethereum.CallResult<MACI__deployPollResultPollAddrStruct> {
    let result = super.tryCall(
      "deployPoll",
      "deployPoll(uint256,(uint8,uint8,uint8,uint8),(uint256,uint256),address,address,bool):((address,address,address,address))",
      [
        ethereum.Value.fromUnsignedBigInt(_duration),
        ethereum.Value.fromTuple(_treeDepths),
        ethereum.Value.fromTuple(_coordinatorPubKey),
        ethereum.Value.fromAddress(_verifier),
        ethereum.Value.fromAddress(_vkRegistry),
        ethereum.Value.fromBoolean(useSubsidy),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<MACI__deployPollResultPollAddrStruct>(value[0].toTuple()),
    );
  }

  getPoll(_pollId: BigInt): Address {
    let result = super.call("getPoll", "getPoll(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_pollId),
    ]);

    return result[0].toAddress();
  }

  try_getPoll(_pollId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("getPoll", "getPoll(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_pollId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getStateAqRoot(): BigInt {
    let result = super.call("getStateAqRoot", "getStateAqRoot():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getStateAqRoot(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getStateAqRoot",
      "getStateAqRoot():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hash2(array: Array<BigInt>): BigInt {
    let result = super.call("hash2", "hash2(uint256[2]):(uint256)", [
      ethereum.Value.fromUnsignedBigIntArray(array),
    ]);

    return result[0].toBigInt();
  }

  try_hash2(array: Array<BigInt>): ethereum.CallResult<BigInt> {
    let result = super.tryCall("hash2", "hash2(uint256[2]):(uint256)", [
      ethereum.Value.fromUnsignedBigIntArray(array),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hash3(array: Array<BigInt>): BigInt {
    let result = super.call("hash3", "hash3(uint256[3]):(uint256)", [
      ethereum.Value.fromUnsignedBigIntArray(array),
    ]);

    return result[0].toBigInt();
  }

  try_hash3(array: Array<BigInt>): ethereum.CallResult<BigInt> {
    let result = super.tryCall("hash3", "hash3(uint256[3]):(uint256)", [
      ethereum.Value.fromUnsignedBigIntArray(array),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hash4(array: Array<BigInt>): BigInt {
    let result = super.call("hash4", "hash4(uint256[4]):(uint256)", [
      ethereum.Value.fromUnsignedBigIntArray(array),
    ]);

    return result[0].toBigInt();
  }

  try_hash4(array: Array<BigInt>): ethereum.CallResult<BigInt> {
    let result = super.tryCall("hash4", "hash4(uint256[4]):(uint256)", [
      ethereum.Value.fromUnsignedBigIntArray(array),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hash5(array: Array<BigInt>): BigInt {
    let result = super.call("hash5", "hash5(uint256[5]):(uint256)", [
      ethereum.Value.fromUnsignedBigIntArray(array),
    ]);

    return result[0].toBigInt();
  }

  try_hash5(array: Array<BigInt>): ethereum.CallResult<BigInt> {
    let result = super.tryCall("hash5", "hash5(uint256[5]):(uint256)", [
      ethereum.Value.fromUnsignedBigIntArray(array),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hashLeftRight(left: BigInt, right: BigInt): BigInt {
    let result = super.call(
      "hashLeftRight",
      "hashLeftRight(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(left),
        ethereum.Value.fromUnsignedBigInt(right),
      ],
    );

    return result[0].toBigInt();
  }

  try_hashLeftRight(left: BigInt, right: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "hashLeftRight",
      "hashLeftRight(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(left),
        ethereum.Value.fromUnsignedBigInt(right),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hashMessageAndEncPubKey(
    _message: MACI__hashMessageAndEncPubKeyInput_messageStruct,
    _encPubKey: MACI__hashMessageAndEncPubKeyInput_encPubKeyStruct,
  ): BigInt {
    let result = super.call(
      "hashMessageAndEncPubKey",
      "hashMessageAndEncPubKey((uint256,uint256[10]),(uint256,uint256)):(uint256)",
      [
        ethereum.Value.fromTuple(_message),
        ethereum.Value.fromTuple(_encPubKey),
      ],
    );

    return result[0].toBigInt();
  }

  try_hashMessageAndEncPubKey(
    _message: MACI__hashMessageAndEncPubKeyInput_messageStruct,
    _encPubKey: MACI__hashMessageAndEncPubKeyInput_encPubKeyStruct,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "hashMessageAndEncPubKey",
      "hashMessageAndEncPubKey((uint256,uint256[10]),(uint256,uint256)):(uint256)",
      [
        ethereum.Value.fromTuple(_message),
        ethereum.Value.fromTuple(_encPubKey),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hashStateLeaf(_stateLeaf: MACI__hashStateLeafInput_stateLeafStruct): BigInt {
    let result = super.call(
      "hashStateLeaf",
      "hashStateLeaf(((uint256,uint256),uint256,uint256)):(uint256)",
      [ethereum.Value.fromTuple(_stateLeaf)],
    );

    return result[0].toBigInt();
  }

  try_hashStateLeaf(
    _stateLeaf: MACI__hashStateLeafInput_stateLeafStruct,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "hashStateLeaf",
      "hashStateLeaf(((uint256,uint256),uint256,uint256)):(uint256)",
      [ethereum.Value.fromTuple(_stateLeaf)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  initialVoiceCreditProxy(): Address {
    let result = super.call(
      "initialVoiceCreditProxy",
      "initialVoiceCreditProxy():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_initialVoiceCreditProxy(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "initialVoiceCreditProxy",
      "initialVoiceCreditProxy():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  mergeStateAq(_pollId: BigInt): BigInt {
    let result = super.call("mergeStateAq", "mergeStateAq(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_pollId),
    ]);

    return result[0].toBigInt();
  }

  try_mergeStateAq(_pollId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "mergeStateAq",
      "mergeStateAq(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_pollId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  messageProcessorFactory(): Address {
    let result = super.call(
      "messageProcessorFactory",
      "messageProcessorFactory():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_messageProcessorFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "messageProcessorFactory",
      "messageProcessorFactory():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  nextPollId(): BigInt {
    let result = super.call("nextPollId", "nextPollId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_nextPollId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nextPollId", "nextPollId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  numSignUps(): BigInt {
    let result = super.call("numSignUps", "numSignUps():(uint256)", []);

    return result[0].toBigInt();
  }

  try_numSignUps(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("numSignUps", "numSignUps():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  numStateLeaves(param0: BigInt): BigInt {
    let result = super.call(
      "numStateLeaves",
      "numStateLeaves(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return result[0].toBigInt();
  }

  try_numStateLeaves(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "numStateLeaves",
      "numStateLeaves(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  padAndHashMessage(
    dataToPad: Array<BigInt>,
    msgType: BigInt,
  ): MACI__padAndHashMessageResult {
    let result = super.call(
      "padAndHashMessage",
      "padAndHashMessage(uint256[2],uint256):((uint256,uint256[10]),(uint256,uint256),uint256)",
      [
        ethereum.Value.fromUnsignedBigIntArray(dataToPad),
        ethereum.Value.fromUnsignedBigInt(msgType),
      ],
    );

    return changetype<MACI__padAndHashMessageResult>(
      new MACI__padAndHashMessageResult(
        changetype<MACI__padAndHashMessageResultMessageStruct>(
          result[0].toTuple(),
        ),
        changetype<MACI__padAndHashMessageResultPadKeyStruct>(
          result[1].toTuple(),
        ),
        result[2].toBigInt(),
      ),
    );
  }

  try_padAndHashMessage(
    dataToPad: Array<BigInt>,
    msgType: BigInt,
  ): ethereum.CallResult<MACI__padAndHashMessageResult> {
    let result = super.tryCall(
      "padAndHashMessage",
      "padAndHashMessage(uint256[2],uint256):((uint256,uint256[10]),(uint256,uint256),uint256)",
      [
        ethereum.Value.fromUnsignedBigIntArray(dataToPad),
        ethereum.Value.fromUnsignedBigInt(msgType),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<MACI__padAndHashMessageResult>(
        new MACI__padAndHashMessageResult(
          changetype<MACI__padAndHashMessageResultMessageStruct>(
            value[0].toTuple(),
          ),
          changetype<MACI__padAndHashMessageResultPadKeyStruct>(
            value[1].toTuple(),
          ),
          value[2].toBigInt(),
        ),
      ),
    );
  }

  pollFactory(): Address {
    let result = super.call("pollFactory", "pollFactory():(address)", []);

    return result[0].toAddress();
  }

  try_pollFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall("pollFactory", "pollFactory():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  polls(param0: BigInt): Address {
    let result = super.call("polls", "polls(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return result[0].toAddress();
  }

  try_polls(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("polls", "polls(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  sha256Hash(array: Array<BigInt>): BigInt {
    let result = super.call("sha256Hash", "sha256Hash(uint256[]):(uint256)", [
      ethereum.Value.fromUnsignedBigIntArray(array),
    ]);

    return result[0].toBigInt();
  }

  try_sha256Hash(array: Array<BigInt>): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "sha256Hash",
      "sha256Hash(uint256[]):(uint256)",
      [ethereum.Value.fromUnsignedBigIntArray(array)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  signUpGatekeeper(): Address {
    let result = super.call(
      "signUpGatekeeper",
      "signUpGatekeeper():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_signUpGatekeeper(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "signUpGatekeeper",
      "signUpGatekeeper():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  stateAq(): Address {
    let result = super.call("stateAq", "stateAq():(address)", []);

    return result[0].toAddress();
  }

  try_stateAq(): ethereum.CallResult<Address> {
    let result = super.tryCall("stateAq", "stateAq():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  stateTreeDepth(): i32 {
    let result = super.call("stateTreeDepth", "stateTreeDepth():(uint8)", []);

    return result[0].toI32();
  }

  try_stateTreeDepth(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "stateTreeDepth",
      "stateTreeDepth():(uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  subsidyFactory(): Address {
    let result = super.call("subsidyFactory", "subsidyFactory():(address)", []);

    return result[0].toAddress();
  }

  try_subsidyFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "subsidyFactory",
      "subsidyFactory():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tallyFactory(): Address {
    let result = super.call("tallyFactory", "tallyFactory():(address)", []);

    return result[0].toAddress();
  }

  try_tallyFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall("tallyFactory", "tallyFactory():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  topupCredit(): Address {
    let result = super.call("topupCredit", "topupCredit():(address)", []);

    return result[0].toAddress();
  }

  try_topupCredit(): ethereum.CallResult<Address> {
    let result = super.tryCall("topupCredit", "topupCredit():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _pollFactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _messageProcessorFactory(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tallyFactory(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _subsidyFactory(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _signUpGatekeeper(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _initialVoiceCreditProxy(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _topupCredit(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get _stateTreeDepth(): i32 {
    return this._call.inputValues[7].value.toI32();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DeployPollCall extends ethereum.Call {
  get inputs(): DeployPollCall__Inputs {
    return new DeployPollCall__Inputs(this);
  }

  get outputs(): DeployPollCall__Outputs {
    return new DeployPollCall__Outputs(this);
  }
}

export class DeployPollCall__Inputs {
  _call: DeployPollCall;

  constructor(call: DeployPollCall) {
    this._call = call;
  }

  get _duration(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _treeDepths(): DeployPollCall_treeDepthsStruct {
    return changetype<DeployPollCall_treeDepthsStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }

  get _coordinatorPubKey(): DeployPollCall_coordinatorPubKeyStruct {
    return changetype<DeployPollCall_coordinatorPubKeyStruct>(
      this._call.inputValues[2].value.toTuple(),
    );
  }

  get _verifier(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _vkRegistry(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get useSubsidy(): boolean {
    return this._call.inputValues[5].value.toBoolean();
  }
}

export class DeployPollCall__Outputs {
  _call: DeployPollCall;

  constructor(call: DeployPollCall) {
    this._call = call;
  }

  get pollAddr(): DeployPollCallPollAddrStruct {
    return changetype<DeployPollCallPollAddrStruct>(
      this._call.outputValues[0].value.toTuple(),
    );
  }
}

export class DeployPollCall_treeDepthsStruct extends ethereum.Tuple {
  get intStateTreeDepth(): i32 {
    return this[0].toI32();
  }

  get messageTreeSubDepth(): i32 {
    return this[1].toI32();
  }

  get messageTreeDepth(): i32 {
    return this[2].toI32();
  }

  get voteOptionTreeDepth(): i32 {
    return this[3].toI32();
  }
}

export class DeployPollCall_coordinatorPubKeyStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class DeployPollCallPollAddrStruct extends ethereum.Tuple {
  get poll(): Address {
    return this[0].toAddress();
  }

  get messageProcessor(): Address {
    return this[1].toAddress();
  }

  get tally(): Address {
    return this[2].toAddress();
  }

  get subsidy(): Address {
    return this[3].toAddress();
  }
}

export class MergeStateAqCall extends ethereum.Call {
  get inputs(): MergeStateAqCall__Inputs {
    return new MergeStateAqCall__Inputs(this);
  }

  get outputs(): MergeStateAqCall__Outputs {
    return new MergeStateAqCall__Outputs(this);
  }
}

export class MergeStateAqCall__Inputs {
  _call: MergeStateAqCall;

  constructor(call: MergeStateAqCall) {
    this._call = call;
  }

  get _pollId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class MergeStateAqCall__Outputs {
  _call: MergeStateAqCall;

  constructor(call: MergeStateAqCall) {
    this._call = call;
  }

  get root(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class MergeStateAqSubRootsCall extends ethereum.Call {
  get inputs(): MergeStateAqSubRootsCall__Inputs {
    return new MergeStateAqSubRootsCall__Inputs(this);
  }

  get outputs(): MergeStateAqSubRootsCall__Outputs {
    return new MergeStateAqSubRootsCall__Outputs(this);
  }
}

export class MergeStateAqSubRootsCall__Inputs {
  _call: MergeStateAqSubRootsCall;

  constructor(call: MergeStateAqSubRootsCall) {
    this._call = call;
  }

  get _numSrQueueOps(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _pollId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MergeStateAqSubRootsCall__Outputs {
  _call: MergeStateAqSubRootsCall;

  constructor(call: MergeStateAqSubRootsCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SignUpCall extends ethereum.Call {
  get inputs(): SignUpCall__Inputs {
    return new SignUpCall__Inputs(this);
  }

  get outputs(): SignUpCall__Outputs {
    return new SignUpCall__Outputs(this);
  }
}

export class SignUpCall__Inputs {
  _call: SignUpCall;

  constructor(call: SignUpCall) {
    this._call = call;
  }

  get _pubKey(): SignUpCall_pubKeyStruct {
    return changetype<SignUpCall_pubKeyStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get _signUpGatekeeperData(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _initialVoiceCreditProxyData(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class SignUpCall__Outputs {
  _call: SignUpCall;

  constructor(call: SignUpCall) {
    this._call = call;
  }
}

export class SignUpCall_pubKeyStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
