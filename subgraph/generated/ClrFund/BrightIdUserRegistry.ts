// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Registered extends ethereum.Event {
  get params(): Registered__Params {
    return new Registered__Params(this);
  }
}

export class Registered__Params {
  _event: Registered;

  constructor(event: Registered) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetBrightIdSettings extends ethereum.Event {
  get params(): SetBrightIdSettings__Params {
    return new SetBrightIdSettings__Params(this);
  }
}

export class SetBrightIdSettings__Params {
  _event: SetBrightIdSettings;

  constructor(event: SetBrightIdSettings) {
    this._event = event;
  }

  get context(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get verifier(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SponsorChanged extends ethereum.Event {
  get params(): SponsorChanged__Params {
    return new SponsorChanged__Params(this);
  }
}

export class SponsorChanged__Params {
  _event: SponsorChanged;

  constructor(event: SponsorChanged) {
    this._event = event;
  }

  get sponsor(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class BrightIdUserRegistry extends ethereum.SmartContract {
  static bind(address: Address): BrightIdUserRegistry {
    return new BrightIdUserRegistry("BrightIdUserRegistry", address);
  }

  brightIdSponsor(): Address {
    let result = super.call(
      "brightIdSponsor",
      "brightIdSponsor():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_brightIdSponsor(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "brightIdSponsor",
      "brightIdSponsor():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  context(): Bytes {
    let result = super.call("context", "context():(bytes32)", []);

    return result[0].toBytes();
  }

  try_context(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("context", "context():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  isVerifiedUser(_user: Address): boolean {
    let result = super.call(
      "isVerifiedUser",
      "isVerifiedUser(address):(bool)",
      [ethereum.Value.fromAddress(_user)]
    );

    return result[0].toBoolean();
  }

  try_isVerifiedUser(_user: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isVerifiedUser",
      "isVerifiedUser(address):(bool)",
      [ethereum.Value.fromAddress(_user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  verifications(param0: Address): BigInt {
    let result = super.call(
      "verifications",
      "verifications(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_verifications(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "verifications",
      "verifications(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  verifier(): Address {
    let result = super.call("verifier", "verifier():(address)", []);

    return result[0].toAddress();
  }

  try_verifier(): ethereum.CallResult<Address> {
    let result = super.tryCall("verifier", "verifier():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _context(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _verifier(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _sponsor(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class RegisterCall extends ethereum.Call {
  get inputs(): RegisterCall__Inputs {
    return new RegisterCall__Inputs(this);
  }

  get outputs(): RegisterCall__Outputs {
    return new RegisterCall__Outputs(this);
  }
}

export class RegisterCall__Inputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }

  get _context(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _addr(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _verificationHash(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _timestamp(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _v(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get _r(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get _s(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }
}

export class RegisterCall__Outputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetSettingsCall extends ethereum.Call {
  get inputs(): SetSettingsCall__Inputs {
    return new SetSettingsCall__Inputs(this);
  }

  get outputs(): SetSettingsCall__Outputs {
    return new SetSettingsCall__Outputs(this);
  }
}

export class SetSettingsCall__Inputs {
  _call: SetSettingsCall;

  constructor(call: SetSettingsCall) {
    this._call = call;
  }

  get _context(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _verifier(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetSettingsCall__Outputs {
  _call: SetSettingsCall;

  constructor(call: SetSettingsCall) {
    this._call = call;
  }
}

export class SetSponsorCall extends ethereum.Call {
  get inputs(): SetSponsorCall__Inputs {
    return new SetSponsorCall__Inputs(this);
  }

  get outputs(): SetSponsorCall__Outputs {
    return new SetSponsorCall__Outputs(this);
  }
}

export class SetSponsorCall__Inputs {
  _call: SetSponsorCall;

  constructor(call: SetSponsorCall) {
    this._call = call;
  }

  get _sponsor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSponsorCall__Outputs {
  _call: SetSponsorCall;

  constructor(call: SetSponsorCall) {
    this._call = call;
  }
}

export class SponsorCall extends ethereum.Call {
  get inputs(): SponsorCall__Inputs {
    return new SponsorCall__Inputs(this);
  }

  get outputs(): SponsorCall__Outputs {
    return new SponsorCall__Outputs(this);
  }
}

export class SponsorCall__Inputs {
  _call: SponsorCall;

  constructor(call: SponsorCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SponsorCall__Outputs {
  _call: SponsorCall;

  constructor(call: SponsorCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
