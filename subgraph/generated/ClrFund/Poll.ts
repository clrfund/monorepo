// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class MergeMaciStateAq extends ethereum.Event {
  get params(): MergeMaciStateAq__Params {
    return new MergeMaciStateAq__Params(this);
  }
}

export class MergeMaciStateAq__Params {
  _event: MergeMaciStateAq;

  constructor(event: MergeMaciStateAq) {
    this._event = event;
  }

  get _stateRoot(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _numSignups(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MergeMaciStateAqSubRoots extends ethereum.Event {
  get params(): MergeMaciStateAqSubRoots__Params {
    return new MergeMaciStateAqSubRoots__Params(this);
  }
}

export class MergeMaciStateAqSubRoots__Params {
  _event: MergeMaciStateAqSubRoots;

  constructor(event: MergeMaciStateAqSubRoots) {
    this._event = event;
  }

  get _numSrQueueOps(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MergeMessageAq extends ethereum.Event {
  get params(): MergeMessageAq__Params {
    return new MergeMessageAq__Params(this);
  }
}

export class MergeMessageAq__Params {
  _event: MergeMessageAq;

  constructor(event: MergeMessageAq) {
    this._event = event;
  }

  get _messageRoot(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MergeMessageAqSubRoots extends ethereum.Event {
  get params(): MergeMessageAqSubRoots__Params {
    return new MergeMessageAqSubRoots__Params(this);
  }
}

export class MergeMessageAqSubRoots__Params {
  _event: MergeMessageAqSubRoots;

  constructor(event: MergeMessageAqSubRoots) {
    this._event = event;
  }

  get _numSrQueueOps(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PublishMessage extends ethereum.Event {
  get params(): PublishMessage__Params {
    return new PublishMessage__Params(this);
  }
}

export class PublishMessage__Params {
  _event: PublishMessage;

  constructor(event: PublishMessage) {
    this._event = event;
  }

  get _message(): PublishMessage_messageStruct {
    return changetype<PublishMessage_messageStruct>(
      this._event.parameters[0].value.toTuple(),
    );
  }

  get _encPubKey(): PublishMessage_encPubKeyStruct {
    return changetype<PublishMessage_encPubKeyStruct>(
      this._event.parameters[1].value.toTuple(),
    );
  }
}

export class PublishMessage_messageStruct extends ethereum.Tuple {
  get msgType(): BigInt {
    return this[0].toBigInt();
  }

  get data(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class PublishMessage_encPubKeyStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class TopupMessage extends ethereum.Event {
  get params(): TopupMessage__Params {
    return new TopupMessage__Params(this);
  }
}

export class TopupMessage__Params {
  _event: TopupMessage;

  constructor(event: TopupMessage) {
    this._event = event;
  }

  get _message(): TopupMessage_messageStruct {
    return changetype<TopupMessage_messageStruct>(
      this._event.parameters[0].value.toTuple(),
    );
  }
}

export class TopupMessage_messageStruct extends ethereum.Tuple {
  get msgType(): BigInt {
    return this[0].toBigInt();
  }

  get data(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class Poll__coordinatorPubKeyResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getX(): BigInt {
    return this.value0;
  }

  getY(): BigInt {
    return this.value1;
  }
}

export class Poll__extContractsResult {
  value0: Address;
  value1: Address;
  value2: Address;

  constructor(value0: Address, value1: Address, value2: Address) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    return map;
  }

  getMaci(): Address {
    return this.value0;
  }

  getMessageAq(): Address {
    return this.value1;
  }

  getTopupCredit(): Address {
    return this.value2;
  }
}

export class Poll__getDeployTimeAndDurationResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getPollDeployTime(): BigInt {
    return this.value0;
  }

  getPollDuration(): BigInt {
    return this.value1;
  }
}

export class Poll__hashMessageAndEncPubKeyInput_messageStruct extends ethereum.Tuple {
  get msgType(): BigInt {
    return this[0].toBigInt();
  }

  get data(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class Poll__hashMessageAndEncPubKeyInput_encPubKeyStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class Poll__hashStateLeafInput_stateLeafStruct extends ethereum.Tuple {
  get pubKey(): Poll__hashStateLeafInput_stateLeafPubKeyStruct {
    return changetype<Poll__hashStateLeafInput_stateLeafPubKeyStruct>(
      this[0].toTuple(),
    );
  }

  get voiceCreditBalance(): BigInt {
    return this[1].toBigInt();
  }

  get timestamp(): BigInt {
    return this[2].toBigInt();
  }
}

export class Poll__hashStateLeafInput_stateLeafPubKeyStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class Poll__maxValuesResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getMaxMessages(): BigInt {
    return this.value0;
  }

  getMaxVoteOptions(): BigInt {
    return this.value1;
  }
}

export class Poll__numSignUpsAndMessagesResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getNumSUps(): BigInt {
    return this.value0;
  }

  getNumMsgs(): BigInt {
    return this.value1;
  }
}

export class Poll__padAndHashMessageResultMessageStruct extends ethereum.Tuple {
  get msgType(): BigInt {
    return this[0].toBigInt();
  }

  get data(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class Poll__padAndHashMessageResultPadKeyStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class Poll__padAndHashMessageResult {
  value0: Poll__padAndHashMessageResultMessageStruct;
  value1: Poll__padAndHashMessageResultPadKeyStruct;
  value2: BigInt;

  constructor(
    value0: Poll__padAndHashMessageResultMessageStruct,
    value1: Poll__padAndHashMessageResultPadKeyStruct,
    value2: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTuple(this.value0));
    map.set("value1", ethereum.Value.fromTuple(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getMessage(): Poll__padAndHashMessageResultMessageStruct {
    return this.value0;
  }

  getPadKey(): Poll__padAndHashMessageResultPadKeyStruct {
    return this.value1;
  }

  getMsgHash(): BigInt {
    return this.value2;
  }
}

export class Poll__treeDepthsResult {
  value0: i32;
  value1: i32;
  value2: i32;
  value3: i32;

  constructor(value0: i32, value1: i32, value2: i32, value3: i32) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0)),
    );
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1)),
    );
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2)),
    );
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3)),
    );
    return map;
  }

  getIntStateTreeDepth(): i32 {
    return this.value0;
  }

  getMessageTreeSubDepth(): i32 {
    return this.value1;
  }

  getMessageTreeDepth(): i32 {
    return this.value2;
  }

  getVoteOptionTreeDepth(): i32 {
    return this.value3;
  }
}

export class Poll extends ethereum.SmartContract {
  static bind(address: Address): Poll {
    return new Poll("Poll", address);
  }

  MESSAGE_DATA_LENGTH(): i32 {
    let result = super.call(
      "MESSAGE_DATA_LENGTH",
      "MESSAGE_DATA_LENGTH():(uint8)",
      [],
    );

    return result[0].toI32();
  }

  try_MESSAGE_DATA_LENGTH(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "MESSAGE_DATA_LENGTH",
      "MESSAGE_DATA_LENGTH():(uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  coordinatorPubKey(): Poll__coordinatorPubKeyResult {
    let result = super.call(
      "coordinatorPubKey",
      "coordinatorPubKey():(uint256,uint256)",
      [],
    );

    return new Poll__coordinatorPubKeyResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_coordinatorPubKey(): ethereum.CallResult<Poll__coordinatorPubKeyResult> {
    let result = super.tryCall(
      "coordinatorPubKey",
      "coordinatorPubKey():(uint256,uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Poll__coordinatorPubKeyResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
      ),
    );
  }

  coordinatorPubKeyHash(): BigInt {
    let result = super.call(
      "coordinatorPubKeyHash",
      "coordinatorPubKeyHash():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_coordinatorPubKeyHash(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "coordinatorPubKeyHash",
      "coordinatorPubKeyHash():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  currentSbCommitment(): BigInt {
    let result = super.call(
      "currentSbCommitment",
      "currentSbCommitment():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_currentSbCommitment(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentSbCommitment",
      "currentSbCommitment():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  extContracts(): Poll__extContractsResult {
    let result = super.call(
      "extContracts",
      "extContracts():(address,address,address)",
      [],
    );

    return new Poll__extContractsResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddress(),
    );
  }

  try_extContracts(): ethereum.CallResult<Poll__extContractsResult> {
    let result = super.tryCall(
      "extContracts",
      "extContracts():(address,address,address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Poll__extContractsResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddress(),
      ),
    );
  }

  getDeployTimeAndDuration(): Poll__getDeployTimeAndDurationResult {
    let result = super.call(
      "getDeployTimeAndDuration",
      "getDeployTimeAndDuration():(uint256,uint256)",
      [],
    );

    return new Poll__getDeployTimeAndDurationResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_getDeployTimeAndDuration(): ethereum.CallResult<Poll__getDeployTimeAndDurationResult> {
    let result = super.tryCall(
      "getDeployTimeAndDuration",
      "getDeployTimeAndDuration():(uint256,uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Poll__getDeployTimeAndDurationResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
      ),
    );
  }

  hash2(array: Array<BigInt>): BigInt {
    let result = super.call("hash2", "hash2(uint256[2]):(uint256)", [
      ethereum.Value.fromUnsignedBigIntArray(array),
    ]);

    return result[0].toBigInt();
  }

  try_hash2(array: Array<BigInt>): ethereum.CallResult<BigInt> {
    let result = super.tryCall("hash2", "hash2(uint256[2]):(uint256)", [
      ethereum.Value.fromUnsignedBigIntArray(array),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hash3(array: Array<BigInt>): BigInt {
    let result = super.call("hash3", "hash3(uint256[3]):(uint256)", [
      ethereum.Value.fromUnsignedBigIntArray(array),
    ]);

    return result[0].toBigInt();
  }

  try_hash3(array: Array<BigInt>): ethereum.CallResult<BigInt> {
    let result = super.tryCall("hash3", "hash3(uint256[3]):(uint256)", [
      ethereum.Value.fromUnsignedBigIntArray(array),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hash4(array: Array<BigInt>): BigInt {
    let result = super.call("hash4", "hash4(uint256[4]):(uint256)", [
      ethereum.Value.fromUnsignedBigIntArray(array),
    ]);

    return result[0].toBigInt();
  }

  try_hash4(array: Array<BigInt>): ethereum.CallResult<BigInt> {
    let result = super.tryCall("hash4", "hash4(uint256[4]):(uint256)", [
      ethereum.Value.fromUnsignedBigIntArray(array),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hash5(array: Array<BigInt>): BigInt {
    let result = super.call("hash5", "hash5(uint256[5]):(uint256)", [
      ethereum.Value.fromUnsignedBigIntArray(array),
    ]);

    return result[0].toBigInt();
  }

  try_hash5(array: Array<BigInt>): ethereum.CallResult<BigInt> {
    let result = super.tryCall("hash5", "hash5(uint256[5]):(uint256)", [
      ethereum.Value.fromUnsignedBigIntArray(array),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hashLeftRight(left: BigInt, right: BigInt): BigInt {
    let result = super.call(
      "hashLeftRight",
      "hashLeftRight(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(left),
        ethereum.Value.fromUnsignedBigInt(right),
      ],
    );

    return result[0].toBigInt();
  }

  try_hashLeftRight(left: BigInt, right: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "hashLeftRight",
      "hashLeftRight(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(left),
        ethereum.Value.fromUnsignedBigInt(right),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hashMessageAndEncPubKey(
    _message: Poll__hashMessageAndEncPubKeyInput_messageStruct,
    _encPubKey: Poll__hashMessageAndEncPubKeyInput_encPubKeyStruct,
  ): BigInt {
    let result = super.call(
      "hashMessageAndEncPubKey",
      "hashMessageAndEncPubKey((uint256,uint256[10]),(uint256,uint256)):(uint256)",
      [
        ethereum.Value.fromTuple(_message),
        ethereum.Value.fromTuple(_encPubKey),
      ],
    );

    return result[0].toBigInt();
  }

  try_hashMessageAndEncPubKey(
    _message: Poll__hashMessageAndEncPubKeyInput_messageStruct,
    _encPubKey: Poll__hashMessageAndEncPubKeyInput_encPubKeyStruct,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "hashMessageAndEncPubKey",
      "hashMessageAndEncPubKey((uint256,uint256[10]),(uint256,uint256)):(uint256)",
      [
        ethereum.Value.fromTuple(_message),
        ethereum.Value.fromTuple(_encPubKey),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hashStateLeaf(_stateLeaf: Poll__hashStateLeafInput_stateLeafStruct): BigInt {
    let result = super.call(
      "hashStateLeaf",
      "hashStateLeaf(((uint256,uint256),uint256,uint256)):(uint256)",
      [ethereum.Value.fromTuple(_stateLeaf)],
    );

    return result[0].toBigInt();
  }

  try_hashStateLeaf(
    _stateLeaf: Poll__hashStateLeafInput_stateLeafStruct,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "hashStateLeaf",
      "hashStateLeaf(((uint256,uint256),uint256,uint256)):(uint256)",
      [ethereum.Value.fromTuple(_stateLeaf)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxValues(): Poll__maxValuesResult {
    let result = super.call("maxValues", "maxValues():(uint256,uint256)", []);

    return new Poll__maxValuesResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_maxValues(): ethereum.CallResult<Poll__maxValuesResult> {
    let result = super.tryCall(
      "maxValues",
      "maxValues():(uint256,uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Poll__maxValuesResult(value[0].toBigInt(), value[1].toBigInt()),
    );
  }

  mergedStateRoot(): BigInt {
    let result = super.call(
      "mergedStateRoot",
      "mergedStateRoot():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_mergedStateRoot(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "mergedStateRoot",
      "mergedStateRoot():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  numMessages(): BigInt {
    let result = super.call("numMessages", "numMessages():(uint256)", []);

    return result[0].toBigInt();
  }

  try_numMessages(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("numMessages", "numMessages():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  numSignUpsAndMessages(): Poll__numSignUpsAndMessagesResult {
    let result = super.call(
      "numSignUpsAndMessages",
      "numSignUpsAndMessages():(uint256,uint256)",
      [],
    );

    return new Poll__numSignUpsAndMessagesResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_numSignUpsAndMessages(): ethereum.CallResult<Poll__numSignUpsAndMessagesResult> {
    let result = super.tryCall(
      "numSignUpsAndMessages",
      "numSignUpsAndMessages():(uint256,uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Poll__numSignUpsAndMessagesResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
      ),
    );
  }

  numSignups(): BigInt {
    let result = super.call("numSignups", "numSignups():(uint256)", []);

    return result[0].toBigInt();
  }

  try_numSignups(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("numSignups", "numSignups():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  padAndHashMessage(
    dataToPad: Array<BigInt>,
    msgType: BigInt,
  ): Poll__padAndHashMessageResult {
    let result = super.call(
      "padAndHashMessage",
      "padAndHashMessage(uint256[2],uint256):((uint256,uint256[10]),(uint256,uint256),uint256)",
      [
        ethereum.Value.fromUnsignedBigIntArray(dataToPad),
        ethereum.Value.fromUnsignedBigInt(msgType),
      ],
    );

    return changetype<Poll__padAndHashMessageResult>(
      new Poll__padAndHashMessageResult(
        changetype<Poll__padAndHashMessageResultMessageStruct>(
          result[0].toTuple(),
        ),
        changetype<Poll__padAndHashMessageResultPadKeyStruct>(
          result[1].toTuple(),
        ),
        result[2].toBigInt(),
      ),
    );
  }

  try_padAndHashMessage(
    dataToPad: Array<BigInt>,
    msgType: BigInt,
  ): ethereum.CallResult<Poll__padAndHashMessageResult> {
    let result = super.tryCall(
      "padAndHashMessage",
      "padAndHashMessage(uint256[2],uint256):((uint256,uint256[10]),(uint256,uint256),uint256)",
      [
        ethereum.Value.fromUnsignedBigIntArray(dataToPad),
        ethereum.Value.fromUnsignedBigInt(msgType),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Poll__padAndHashMessageResult>(
        new Poll__padAndHashMessageResult(
          changetype<Poll__padAndHashMessageResultMessageStruct>(
            value[0].toTuple(),
          ),
          changetype<Poll__padAndHashMessageResultPadKeyStruct>(
            value[1].toTuple(),
          ),
          value[2].toBigInt(),
        ),
      ),
    );
  }

  sha256Hash(array: Array<BigInt>): BigInt {
    let result = super.call("sha256Hash", "sha256Hash(uint256[]):(uint256)", [
      ethereum.Value.fromUnsignedBigIntArray(array),
    ]);

    return result[0].toBigInt();
  }

  try_sha256Hash(array: Array<BigInt>): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "sha256Hash",
      "sha256Hash(uint256[]):(uint256)",
      [ethereum.Value.fromUnsignedBigIntArray(array)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  stateAqMerged(): boolean {
    let result = super.call("stateAqMerged", "stateAqMerged():(bool)", []);

    return result[0].toBoolean();
  }

  try_stateAqMerged(): ethereum.CallResult<boolean> {
    let result = super.tryCall("stateAqMerged", "stateAqMerged():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  treeDepths(): Poll__treeDepthsResult {
    let result = super.call(
      "treeDepths",
      "treeDepths():(uint8,uint8,uint8,uint8)",
      [],
    );

    return new Poll__treeDepthsResult(
      result[0].toI32(),
      result[1].toI32(),
      result[2].toI32(),
      result[3].toI32(),
    );
  }

  try_treeDepths(): ethereum.CallResult<Poll__treeDepthsResult> {
    let result = super.tryCall(
      "treeDepths",
      "treeDepths():(uint8,uint8,uint8,uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Poll__treeDepthsResult(
        value[0].toI32(),
        value[1].toI32(),
        value[2].toI32(),
        value[3].toI32(),
      ),
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _duration(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _maxValues(): ConstructorCall_maxValuesStruct {
    return changetype<ConstructorCall_maxValuesStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }

  get _treeDepths(): ConstructorCall_treeDepthsStruct {
    return changetype<ConstructorCall_treeDepthsStruct>(
      this._call.inputValues[2].value.toTuple(),
    );
  }

  get _coordinatorPubKey(): ConstructorCall_coordinatorPubKeyStruct {
    return changetype<ConstructorCall_coordinatorPubKeyStruct>(
      this._call.inputValues[3].value.toTuple(),
    );
  }

  get _extContracts(): ConstructorCall_extContractsStruct {
    return changetype<ConstructorCall_extContractsStruct>(
      this._call.inputValues[4].value.toTuple(),
    );
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall_maxValuesStruct extends ethereum.Tuple {
  get maxMessages(): BigInt {
    return this[0].toBigInt();
  }

  get maxVoteOptions(): BigInt {
    return this[1].toBigInt();
  }
}

export class ConstructorCall_treeDepthsStruct extends ethereum.Tuple {
  get intStateTreeDepth(): i32 {
    return this[0].toI32();
  }

  get messageTreeSubDepth(): i32 {
    return this[1].toI32();
  }

  get messageTreeDepth(): i32 {
    return this[2].toI32();
  }

  get voteOptionTreeDepth(): i32 {
    return this[3].toI32();
  }
}

export class ConstructorCall_coordinatorPubKeyStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class ConstructorCall_extContractsStruct extends ethereum.Tuple {
  get maci(): Address {
    return this[0].toAddress();
  }

  get messageAq(): Address {
    return this[1].toAddress();
  }

  get topupCredit(): Address {
    return this[2].toAddress();
  }
}

export class InitCall extends ethereum.Call {
  get inputs(): InitCall__Inputs {
    return new InitCall__Inputs(this);
  }

  get outputs(): InitCall__Outputs {
    return new InitCall__Outputs(this);
  }
}

export class InitCall__Inputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }
}

export class InitCall__Outputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }
}

export class MergeMaciStateAqCall extends ethereum.Call {
  get inputs(): MergeMaciStateAqCall__Inputs {
    return new MergeMaciStateAqCall__Inputs(this);
  }

  get outputs(): MergeMaciStateAqCall__Outputs {
    return new MergeMaciStateAqCall__Outputs(this);
  }
}

export class MergeMaciStateAqCall__Inputs {
  _call: MergeMaciStateAqCall;

  constructor(call: MergeMaciStateAqCall) {
    this._call = call;
  }

  get _pollId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class MergeMaciStateAqCall__Outputs {
  _call: MergeMaciStateAqCall;

  constructor(call: MergeMaciStateAqCall) {
    this._call = call;
  }
}

export class MergeMaciStateAqSubRootsCall extends ethereum.Call {
  get inputs(): MergeMaciStateAqSubRootsCall__Inputs {
    return new MergeMaciStateAqSubRootsCall__Inputs(this);
  }

  get outputs(): MergeMaciStateAqSubRootsCall__Outputs {
    return new MergeMaciStateAqSubRootsCall__Outputs(this);
  }
}

export class MergeMaciStateAqSubRootsCall__Inputs {
  _call: MergeMaciStateAqSubRootsCall;

  constructor(call: MergeMaciStateAqSubRootsCall) {
    this._call = call;
  }

  get _numSrQueueOps(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _pollId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MergeMaciStateAqSubRootsCall__Outputs {
  _call: MergeMaciStateAqSubRootsCall;

  constructor(call: MergeMaciStateAqSubRootsCall) {
    this._call = call;
  }
}

export class MergeMessageAqCall extends ethereum.Call {
  get inputs(): MergeMessageAqCall__Inputs {
    return new MergeMessageAqCall__Inputs(this);
  }

  get outputs(): MergeMessageAqCall__Outputs {
    return new MergeMessageAqCall__Outputs(this);
  }
}

export class MergeMessageAqCall__Inputs {
  _call: MergeMessageAqCall;

  constructor(call: MergeMessageAqCall) {
    this._call = call;
  }
}

export class MergeMessageAqCall__Outputs {
  _call: MergeMessageAqCall;

  constructor(call: MergeMessageAqCall) {
    this._call = call;
  }
}

export class MergeMessageAqSubRootsCall extends ethereum.Call {
  get inputs(): MergeMessageAqSubRootsCall__Inputs {
    return new MergeMessageAqSubRootsCall__Inputs(this);
  }

  get outputs(): MergeMessageAqSubRootsCall__Outputs {
    return new MergeMessageAqSubRootsCall__Outputs(this);
  }
}

export class MergeMessageAqSubRootsCall__Inputs {
  _call: MergeMessageAqSubRootsCall;

  constructor(call: MergeMessageAqSubRootsCall) {
    this._call = call;
  }

  get _numSrQueueOps(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class MergeMessageAqSubRootsCall__Outputs {
  _call: MergeMessageAqSubRootsCall;

  constructor(call: MergeMessageAqSubRootsCall) {
    this._call = call;
  }
}

export class PublishMessageCall extends ethereum.Call {
  get inputs(): PublishMessageCall__Inputs {
    return new PublishMessageCall__Inputs(this);
  }

  get outputs(): PublishMessageCall__Outputs {
    return new PublishMessageCall__Outputs(this);
  }
}

export class PublishMessageCall__Inputs {
  _call: PublishMessageCall;

  constructor(call: PublishMessageCall) {
    this._call = call;
  }

  get _message(): PublishMessageCall_messageStruct {
    return changetype<PublishMessageCall_messageStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get _encPubKey(): PublishMessageCall_encPubKeyStruct {
    return changetype<PublishMessageCall_encPubKeyStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }
}

export class PublishMessageCall__Outputs {
  _call: PublishMessageCall;

  constructor(call: PublishMessageCall) {
    this._call = call;
  }
}

export class PublishMessageCall_messageStruct extends ethereum.Tuple {
  get msgType(): BigInt {
    return this[0].toBigInt();
  }

  get data(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class PublishMessageCall_encPubKeyStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class PublishMessageBatchCall extends ethereum.Call {
  get inputs(): PublishMessageBatchCall__Inputs {
    return new PublishMessageBatchCall__Inputs(this);
  }

  get outputs(): PublishMessageBatchCall__Outputs {
    return new PublishMessageBatchCall__Outputs(this);
  }
}

export class PublishMessageBatchCall__Inputs {
  _call: PublishMessageBatchCall;

  constructor(call: PublishMessageBatchCall) {
    this._call = call;
  }

  get _messages(): Array<PublishMessageBatchCall_messagesStruct> {
    return this._call.inputValues[0].value.toTupleArray<PublishMessageBatchCall_messagesStruct>();
  }

  get _encPubKeys(): Array<PublishMessageBatchCall_encPubKeysStruct> {
    return this._call.inputValues[1].value.toTupleArray<PublishMessageBatchCall_encPubKeysStruct>();
  }
}

export class PublishMessageBatchCall__Outputs {
  _call: PublishMessageBatchCall;

  constructor(call: PublishMessageBatchCall) {
    this._call = call;
  }
}

export class PublishMessageBatchCall_messagesStruct extends ethereum.Tuple {
  get msgType(): BigInt {
    return this[0].toBigInt();
  }

  get data(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class PublishMessageBatchCall_encPubKeysStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get y(): BigInt {
    return this[1].toBigInt();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TopupCall extends ethereum.Call {
  get inputs(): TopupCall__Inputs {
    return new TopupCall__Inputs(this);
  }

  get outputs(): TopupCall__Outputs {
    return new TopupCall__Outputs(this);
  }
}

export class TopupCall__Inputs {
  _call: TopupCall;

  constructor(call: TopupCall) {
    this._call = call;
  }

  get stateIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TopupCall__Outputs {
  _call: TopupCall;

  constructor(call: TopupCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
